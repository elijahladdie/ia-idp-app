# Server Configuration
server.port=8088
server.servlet.context-path=/
server.address=0.0.0.0

# Spring Boot DevTools Configuration
spring.devtools.restart.enabled=true
spring.devtools.livereload.enabled=true
spring.devtools.restart.additional-paths=src/main/java,src/main/resources
spring.devtools.restart.poll-interval=1s
spring.devtools.restart.quiet-period=400ms
spring.profiles.active=prod

# Database Configuration
spring.application.name=idp-service
spring.datasource.url=jdbc:postgresql://postgres:${DB_PASSWORD}@db.efctnpiyltbzcpwqxgfe.supabase.co:5432/postgres
# spring.datasource.url=jdbc:postgresql://${DB_HOST:db.efctnpiyltbzcpwqxgfe.supabase.co}:${DB_PORT:5432}/${DB_NAME:idpdb}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver
# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# JWT Configuration - Keys are now generated internally
jwt.access-token.expiration=900000
jwt.refresh-token.expiration=2592000000
jwt.issuer=https://idp.companyia.com
jwt.key-id=key-1

# LinkedIn OAuth Configuration
linkedin.client-id=${LINKEDIN_CLIENT_ID}
linkedin.client-secret=${LINKEDIN_CLIENT_SECRET}
linkedin.redirect-uri=${LINKEDIN_REDIRECT_URI:http://localhost:8080/auth/linkedin/callback}
linkedin.authorization-uri=https://www.linkedin.com/oauth/v2/authorization
linkedin.token-uri=https://www.linkedin.com/oauth/v2/accessToken
linkedin.user-info-uri=https://api.linkedin.com/v2/userinfo

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${APP_EMAIL}
spring.mail.password=${APP_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.debug=true 
# Application Configuration
app.base-url=${APP_BASE_URL:http://localhost:8080}
app.frontend-url=${FRONTEND_URL:http://localhost:5500}
app.email-verification-required=true
app.allow-unverified-login=false

# CORS Configuration
cors.allowed-origins=${CORS_ALLOWED_ORIGINS:http://localhost:5500,http://localhost:8080}
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*
cors.allow-credentials=true

# Logging
logging.level.com.ia.idp=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web=DEBUG
